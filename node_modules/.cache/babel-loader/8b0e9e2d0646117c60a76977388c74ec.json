{"ast":null,"code":"var _jsxFileName = \"/Users/kozmo/Documents/\\xBA|v|s()>|/W3B/reactjs-portfolio2/reactjs-portfolio2/src/components/Button.js\";\nimport React from 'react';\nimport './Button.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STYLES = ['btn--prmary', 'btn--outline'];\nconst SIZES = ['btn--medium', 'btn--large', 'btn--mobile', 'btn--wide'];\nconst COLOR = ['primary', 'blue', 'red', 'green'];\nexport const Button = _ref => {\n  let {\n    children,\n    type,\n    onClick,\n    buttonStyle,\n    buttonSize,\n    buttonColor\n  } = _ref;\n  const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n  const checkButtonColor = COLOR.includes(buttonColor) ? buttonColor : null;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `btn ${checkButtonStyle} ${checkButtonSize} ${checkButtonColor}`,\n    onClick: onClick,\n    type: type,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_c = Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","STYLES","SIZES","COLOR","Button","children","type","onClick","buttonStyle","buttonSize","buttonColor","checkButtonStyle","includes","checkButtonSize","checkButtonColor"],"sources":["/Users/kozmo/Documents/ยบ|v|s()>|/W3B/reactjs-portfolio2/reactjs-portfolio2/src/components/Button.js"],"sourcesContent":["import React from 'react';\nimport './Button.css';\n\n\nconst STYLES = ['btn--prmary', 'btn--outline']\n\nconst SIZES = ['btn--medium', 'btn--large', 'btn--mobile', 'btn--wide']\n\nconst COLOR = ['primary', 'blue', 'red', 'green'];\n\nexport const Button = ({\n    children,\n    type,\n    onClick,\n    buttonStyle,\n    buttonSize,\n    buttonColor\n}) => {\n\n    const checkButtonStyle = STYLES.includes(buttonStyle) ?\n    buttonStyle : STYLES[0];\n\n    const checkButtonSize = SIZES.includes(buttonSize) ?\n    buttonSize : SIZES[0];\n\n    const checkButtonColor = COLOR.includes(buttonColor) ?\n    buttonColor : null;\n\n    return (\n        <button className={`btn ${checkButtonStyle} ${checkButtonSize} ${checkButtonColor}`} onClick={onClick}\n        type={type}>{children}</button>\n    )\n}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;;AAGA,MAAMC,MAAM,GAAG,CAAC,aAAD,EAAgB,cAAhB,CAAf;AAEA,MAAMC,KAAK,GAAG,CAAC,aAAD,EAAgB,YAAhB,EAA8B,aAA9B,EAA6C,WAA7C,CAAd;AAEA,MAAMC,KAAK,GAAG,CAAC,SAAD,EAAY,MAAZ,EAAoB,KAApB,EAA2B,OAA3B,CAAd;AAEA,OAAO,MAAMC,MAAM,GAAG,QAOhB;EAAA,IAPiB;IACnBC,QADmB;IAEnBC,IAFmB;IAGnBC,OAHmB;IAInBC,WAJmB;IAKnBC,UALmB;IAMnBC;EANmB,CAOjB;EAEF,MAAMC,gBAAgB,GAAGV,MAAM,CAACW,QAAP,CAAgBJ,WAAhB,IACzBA,WADyB,GACXP,MAAM,CAAC,CAAD,CADpB;EAGA,MAAMY,eAAe,GAAGX,KAAK,CAACU,QAAN,CAAeH,UAAf,IACxBA,UADwB,GACXP,KAAK,CAAC,CAAD,CADlB;EAGA,MAAMY,gBAAgB,GAAGX,KAAK,CAACS,QAAN,CAAeF,WAAf,IACzBA,WADyB,GACX,IADd;EAGA,oBACI;IAAQ,SAAS,EAAG,OAAMC,gBAAiB,IAAGE,eAAgB,IAAGC,gBAAiB,EAAlF;IAAqF,OAAO,EAAEP,OAA9F;IACA,IAAI,EAAED,IADN;IAAA,UACaD;EADb;IAAA;IAAA;IAAA;EAAA,QADJ;AAIH,CAtBM;KAAMD,M"},"metadata":{},"sourceType":"module"}